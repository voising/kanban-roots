- if !@task.comments.empty?
  hr
  - @task.comments.each do |comment|
    .comment-container
      = gravatar_image_tag(comment.contributor, :size => 48, :class => 'comment-avatar')

      .comment-wrapper
        .comment-info.clear-inline
          p.comment-authour
            strong
              ' #{comment.contributor.name}
            ' #{t(:commented)}
          p.comment-date #{comment.updated_at.strftime '%d-%m-%Y'}

        .comment-body
          - if comment.contributor == current_contributor
            .comment-menu
              = link_to t(:edit), edit_project_task_comment_path(@project, @task, comment), :class => 'btn primary small'
              = link_to t(:destroy), project_task_comment_path(@project, @task, comment), \
                                  :class => 'btn btn-danger small', \
                                  :confirm => t(:are_you_sure), :method => :delete
          = markdown(comment.content)

.comment-container
  = gravatar_image_tag(current_contributor, :size => 48, :class => 'comment-avatar')

  .comment-wrapper
    .comment-info.clear-inline
      p.comment-authour
        strong = t(:comment)
      p.comment-date
        = markdown_note('Tasks').html_safe


    = simple_form_for [@project, @task, @comment] do |f|
      .comment-body
        = f.input :content, :label => false, :input_html => { :class => 'monospace', :rows => 10 }

        = hidden_field_tag "comment[contributor_id]", current_contributor.id

        .new-comment-menu
          = f.submit t(:leave_a_comment), :class => 'btn primary'